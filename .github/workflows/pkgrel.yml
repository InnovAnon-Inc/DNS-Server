name: Hack the Box Team Support Services
permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'
  #[workflow_call]
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    name: build package
    runs-on: ubuntu-latest
    steps:
    - name: install build deps
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: >
          libpq-dev python3 python-is-python3 python3-pip
        version: 1.0
    
    - name: Checkout code
      uses: actions/checkout@v3
      #with:
      #  path: "repo"
    
    - name: Build Deps
      run: |
        pip install build

    #- name: Optional Build Deps
    #  run: |
    #    pip install -e '.[dev]'
    #
    - name: Bump version and push tag Dryrun
      id:   tag_version_dryrun
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix:
        dry_run: true

    - name: Build
      run: |
        python -m build
      env:
        TEAMHACK_VERSION: ${{ steps.tag_version_dryrun.outputs.new_tag }}

    # TODO new image
    - name: Install
      run: |
        pip install dist/*

    - name: Test Deps
      run: |
        #pip install '.[test]'
        pip install coverage pytest

    - name: DB
      run: |
        #sudo createuser  user
        #sudo createdb -O user db
        echo '[postgresql]'    >  test_database.ini
        echo host=localhost    >> test_database.ini
        echo database=postgres >> test_database.ini
        echo user=postgres     >> test_database.ini
        echo password=postgres >> test_database.ini
    
    - name: Integration Test
      run: |
        #export PATH=$HOME/.local/bin:$PATH
        #pytest
        #coverage run
        python -m pytest
        python -m coverage run
    
    ## TODO new image
    #- name: Release Deps
    #  run: |
    #    #pip install '.[rel]'
    #    pip install twine
    #
    #- name: Release
    #  run: |
    #    #export PATH=$HOME/.local/bin:$PATH
    #    python3 -m twine upload dist/*

    # TODO new image
    - name: Build Docker Image
      run: |
        docker build -t teamhack .
    #- name: Deploy Docker Image
    #  run: |
    #    docker deploy   teamhack

    #- name: sign installation package
    #  working-directory: ${{ github.workspace }}
    #  run: gpg --yes --detach-sig linux-${{ env.tag }}.tar.xz

    - name: Bump version and push tag
      id:   tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        fail_on_unmatched_files: true
        generate_release_notes: true
        files: |
          dist/*

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

